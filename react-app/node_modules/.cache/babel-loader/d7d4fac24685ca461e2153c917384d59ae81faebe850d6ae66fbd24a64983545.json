{"ast":null,"code":"var _jsxFileName = \"/Users/manuelmunoz/hw5-mannymnz/react-app/src/Components/Feed.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Post from \"./Post\";\nimport NewPost from \"./NewPost\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  // Un-comment the lines below to complete your solution\n  // ====================\n\n  const [posts, setPosts] = useState();\n  const getPostsData = () => {\n    axios.get(\"http://localhost:3002/posts\") //THIS IS YOUR URL OF YOUR API\n    .then(data => setPosts(data)) //PROMISE API, THAT MEANS WHEN YOU GET THE DATA WHAT DO I DO WITH IT\n    .catch(error => console.log(error)); //ERROR CATCHING IN CASE WE RECIEVE AN ERROR\n  };\n\n  useEffect(() => {\n    getPostsData();\n  }, []);\n\n  // ====================\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    children: [data && data.map(d => /*#__PURE__*/_jsxDEV(Post, {\n      title: d.title,\n      body: d.body,\n      comments: d.comments,\n      id: d.id\n    }, d.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(NewPost, {\n      __________: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"gNpU8K6D9yXWS6G6mu7mBiUIyfk=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","Post","NewPost","axios","Feed","posts","setPosts","useState","getPostsData","get","then","data","catch","error","console","log","useEffect","maxWidth","marginLeft","marginRight","map","d","title","body","comments","id"],"sources":["/Users/manuelmunoz/hw5-mannymnz/react-app/src/Components/Feed.js"],"sourcesContent":["import React from 'react';\nimport Post from \"./Post\";\nimport NewPost from \"./NewPost\";\nimport axios from \"axios\"\n\nconst Feed = () => {\n  // Un-comment the lines below to complete your solution\n  // ====================\n\n   const [posts, setPosts] = useState();\n\n   const getPostsData = () => {\n     axios\n       .get(\"http://localhost:3002/posts\") //THIS IS YOUR URL OF YOUR API\n       .then((data) => setPosts(data)) //PROMISE API, THAT MEANS WHEN YOU GET THE DATA WHAT DO I DO WITH IT\n       .catch((error) => console.log(error));  //ERROR CATCHING IN CASE WE RECIEVE AN ERROR\n   };\n\n   useEffect(() => {\n     getPostsData();\n   }, [])\n\n  // ====================\n\n  return (\n    <div style={{ maxWidth: '600px', marginLeft: 'auto', marginRight: 'auto'}}>\n      {\n        data && data.map(d =>\n          <Post title={d.title} body={d.body} comments={d.comments} id={d.id} key={d.id} />\n        )\n      }\n\n      <NewPost __________ />\n    </div>\n  )\n\n}\n\n\nexport default Feed;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB;EACA;;EAEC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,EAAE;EAEpC,MAAMC,YAAY,GAAG,MAAM;IACzBL,KAAK,CACFM,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAAA,CACnCC,IAAI,CAAEC,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IAAA,CAC/BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAAE;EAC5C,CAAC;;EAEDG,SAAS,CAAC,MAAM;IACdR,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEP;;EAEA,oBACE;IAAK,KAAK,EAAE;MAAES,QAAQ,EAAE,OAAO;MAAEC,UAAU,EAAE,MAAM;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAA,WAEtER,IAAI,IAAIA,IAAI,CAACS,GAAG,CAACC,CAAC,iBAChB,QAAC,IAAI;MAAC,KAAK,EAAEA,CAAC,CAACC,KAAM;MAAC,IAAI,EAAED,CAAC,CAACE,IAAK;MAAC,QAAQ,EAAEF,CAAC,CAACG,QAAS;MAAC,EAAE,EAAEH,CAAC,CAACI;IAAG,GAAMJ,CAAC,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAAI,CAClF,eAGH,QAAC,OAAO;MAAC,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAGV,CAAC;AAAA,GA/BKrB,IAAI;AAAA,KAAJA,IAAI;AAkCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}